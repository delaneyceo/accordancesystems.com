<?php
/**
 * @file
 * Code for the as_core module.
 */

/**
* Implements hook_form_alter().
*/
function as_core_form_alter(&$form, &$form_state, $form_id) {
  // Add captcha to all webforms.
  if (strstr($form_id, 'webform_client_form')) {
    $form['custom_captcha'] = array(
      '#type' => 'captcha',
      '#captcha_type' => 'hidden_captcha/Hidden CAPTCHA',
    );
  }
}

/**
* Implements hook_form_node_form_alter().
*/
function as_core_form_node_form_alter(&$form, &$form_state) {
  $type = $form['type']['#value'];

  // Disable url path access globally and add execeptions for specific nodes
  if (!user_access('administer url aliases')) {
    $exceptions = array('page', 'webform');
    if (!in_array($type, $exceptions)) {
      $form['#after_build'][] = 'as_core_url_path_access_restriction';
    }
  }

  // Prevent the Footer Contact Block basic page node from deletion.
  if ($form['nid']['#value'] == '51') {
    unset($form['actions']['delete']);
  }
}

// Custom function to set path access.
function as_core_url_path_access_restriction($form, &$form_state) {
  $form['path']['#access'] = FALSE;
  $form_state['values']['path']['pathauto'] = 1;

  return ($form);

}

/**
* Implements hook_commerce_cybersource_sawm_transaction_data_alter().
* This will allow us to pass shipping information into Cybersource.
*/
function as_core_commerce_cybersource_sawm_transaction_data_alter(&$form, $order) {
  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);

  // Prepare the shipping address for use in the request.
  $shipping_address = $order_wrapper->commerce_customer_shipping->commerce_customer_address->value();

  if (!empty($shipping_address) && is_array($shipping_address)) {
    // If there is no first_name field, break apart the name_line field.
    if (empty($shipping_address['first_name'])) {
      $name_parts = explode(' ', $shipping_address['name_line']);
      $shipping_address['first_name'] = array_shift($name_parts);
      $shipping_address['last_name'] = implode(' ', $name_parts);
    }

    // Optional. First name.
    if (!empty($shipping_address['first_name'])) {
      $form['ship_to_forename'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['first_name'],
      );
    }
    // Optional. Last name.
    if (!empty($shipping_address['last_name'])) {
      $form['ship_to_surname'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['last_name'],
      );
    }
    // Optional. Company name.
    if (!empty($shipping_address['organisation_name'])) {
      $form['ship_to_company_name'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['organisation_name'],
      );
    }
    // Optional. Address line 1.
    if (!empty($shipping_address['thoroughfare'])) {
      $form['ship_to_address_line1'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['thoroughfare'],
      );
    }
    // Optional. Address line 2.
    if (!empty($shipping_address['premise'])) {
      $form['ship_to_address_line2'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['premise'],
      );
    }
    // Optional.
    if (!empty($shipping_address['locality'])) {
      $form['ship_to_address_city'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['locality'],
      );
    }
    // Optional. @link https://drupal.org/node/2112947 UK optional state @endlink
    if (!empty($shipping_address['administrative_area'])) {
      $form['ship_to_address_state'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['administrative_area'],
      );
    }
    // Optional.
    if (!empty($shipping_address['country'])) {
      $form['ship_to_address_country'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['country'],
      );
    }
    // Optional.
    if (!empty($shipping_address['postal_code'])) {
      $form['ship_to_address_postal_code'] = array(
        '#type' => 'hidden',
        '#value' => $shipping_address['postal_code'],
      );
    }
  }
}
